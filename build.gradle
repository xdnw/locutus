import io.github.kobylynskyi.graphql.codegen.gradle.GraphQLCodegenGradleTask
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

buildscript {
    ext.kotlin_version = '1.5.30'
//    ext {
//        joobyVersion = "2.9.4"
//    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
//        classpath "io.jooby:jooby-gradle-plugin:2.8.5"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}

plugins {
    id 'java'
    id "idea"
    id "com.fizzed.rocker" version "1.3.0"
    id "io.github.kobylynskyi.graphql.codegen" version "5.4.0"
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

apply plugin: "kotlin"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

group 'link.locutus'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://zoidberg.ukp.informatik.tu-darmstadt.de/artifactory/public-releases/"
    }
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
//    maven {
//        name = "GitHubPackages-pw4j"
//        url "https://maven.pkg.github.com/l0llygag/pw4j"
//        credentials {
//            username = System.getenv("GITHUB_USERNAME")
//            password = System.getenv("GITHUB_TOKEN")
//        }
//    }
    flatDir {
        dirs 'libs'
    }
    gradlePluginPortal()
}

compileJava.options.compilerArgs.add '-parameters'
compileTestJava.options.compilerArgs.add '-parameters'

dependencies {
//    implementation name: 'pw4j-1.6.1'
//    implementation 'io.github.adorable-skullmaster:pw4j:1.6.0'


    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

    implementation "org.xerial:sqlite-jdbc:3.30.1"
    implementation "com.google.code.gson:gson:2.8.6"
    implementation 'org.jsoup:jsoup:1.12.1'
    compile 'org.bitbucket.cowwoc:diff-match-patch:1.2'

    implementation ('net.dv8tion:JDA:5.0.0-alpha.5') {
//        implementation 'club.minnced:discord-webhooks:4.2.0_182'
        exclude module: 'opus-java'
    }
    // https://mvnrepository.com/artifact/club.minnced/discord-webhooks
    implementation group: 'club.minnced', name: 'discord-webhooks', version: '0.7.2'


    // https://mvnrepository.com/artifact/io.jooby/jooby
//    implementation group: 'io.jooby', name: 'jooby', version: '2.9.4'
//    implementation "io.jooby:jooby-http2-undertow:2.9.4"
//    implementation 'io.jooby:jooby-gson:2.9.4'

//    annotationProcessor "io.jooby:jooby:2.9.4"
//    implementation "io.jooby:jooby-netty:2.9.4"
//    implementation 'io.jooby:jooby-gson:2.8.5'

    implementation 'io.javalin:javalin:4.0.0.RC3'
    implementation 'io.javalin:javalin-parent:4.0.0.RC3'
    implementation 'io.javalin:javalin-bundle:4.0.0.RC3'

// https://mvnrepository.com/artifact/org.bouncycastle/bcpkix-jdk15on
//    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.69'

    implementation 'com.ptsmods:mysqlw:1.7'

    implementation 'com.google.api-client:google-api-client:1.33.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.32.1'
    implementation 'com.google.apis:google-api-services-sheets:v4-rev20210629-1.32.1'
    implementation 'com.google.apis:google-api-services-drive:v3-rev20211107-1.32.1'
    implementation 'de.erichseifert.gral:gral-core:0.11'

    implementation 'org.kefirsf:kefirbb:1.5'
    implementation 'com.inversoft:prime-transformer:2.1.4'

    // https://mvnrepository.com/artifact/gnu.trove/trove
    implementation group: 'gnu.trove', name: 'trove', version: '3.0.3'
    // https://mvnrepository.com/artifact/com.overzealous/remark
    implementation group: 'com.overzealous', name: 'remark', version: '1.0.0'
    // https://mvnrepository.com/artifact/it.unimi.dsi/fastutil
    implementation group: 'it.unimi.dsi', name: 'fastutil', version: '8.2.1'

    // https://mvnrepository.com/artifact/com.opencsv/opencsv
    implementation group: 'com.opencsv', name: 'opencsv', version: '3.7'

    implementation group: 'com.fizzed', name: 'rocker-runtime', version: '1.3.0'
    implementation 'com.fizzed:rocker-compiler:1.3.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"


    implementation "org.springframework.boot:spring-boot-starter-web:2.4.4"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb:2.4.4"

    implementation "com.graphql-java-kickstart:graphql-spring-boot-starter:11.0.0"
    implementation "com.graphql-java-kickstart:graphiql-spring-boot-starter:11.0.0"

    implementation "com.graphql-java:graphql-java-extended-scalars:16.0.1"
    implementation "io.github.kobylynskyi:graphql-java-codegen:5.4.0"

    implementation "org.apache.httpcomponents:httpclient:4.5.13"
    implementation "javax.validation:validation-api:2.0.1.Final"

    implementation "org.mapstruct:mapstruct:1.4.2.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2.2'
}

sourceSets {
    main {
        rocker {
            srcDir('src/main/java')
        }
    }
}

rocker {
    // (All settings are shown with their defaults)
    //
    // Skips building templates all together
    skip false
    // Base directory for generated java sources, actual target is sub directory
    // with the name of the source set. The value is passed through project.file().
    outputBaseDirectory = "$buildDir/generated-src/rocker"
    // Base directory for the directory where the hot reload feature
    // will (re)compile classes to at runtime (and where `rocker-compiler.conf`
    // is generated, which is used by RockerRuntime.getInstance().setReloading(true)).
    // The actual target is a sub directory with the name of the source set.
    // The value is passed through project.file().
    classBaseDirectory = "$buildDir/classes"
    failOnError true
    skipTouch true
    // must not be empty when skipTouch is equal to false
    touchFile ""
    javaVersion '1.8'
    extendsClass null
    extendsModelClass null
    optimize null
    discardLogicWhitespace null
    targetCharset null
    suffixRegex null
    postProcessing null
    markAsGenerated null
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}


/**
 * Generate requests and model from external service
 */
compileJava.dependsOn "graphqlCodegenProductService"
sourceSets.main.java.srcDir "$buildDir/generated"
task graphqlCodegenProductService(type: GraphQLCodegenGradleTask) {
    graphqlSchemas.includePattern = "schema\\.graphqls"
    outputDir = new File("$buildDir/generated")
    modelPackageName = "com.politicsandwar.graphql.model"
    customTypesMapping = [
            DateTime: "java.util.Date",
            DateTimeAuto: "java.time.Instant"
    ]
    parentInterfaces {
        queryResolver = "graphql.kickstart.tools.GraphQLQueryResolver"
        mutationResolver = "graphql.kickstart.tools.GraphQLMutationResolver"
        subscriptionResolver = "graphql.kickstart.tools.GraphQLSubscriptionResolver"
        resolver = "graphql.kickstart.tools.GraphQLResolver<{{TYPE}}>"
    }
    generateApis = true
    generateClient = true
    generateParameterizedFieldsResolvers = false
    generateBuilder = true
    generateToString = true

    supportUnknownFields = true
    unknownFieldsPropertyName = "additionalFields"
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'link.locutus.discord.Locutus'
        )
    }
}

shadowJar {
    archiveName = "${name}-${project.name}-${version}.jar"
}

build.dependsOn(shadowJar);